# -*- coding: utf-8 -*-
"""Caesar_cipher.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1i0vz06MH9yIj-5y5uv75a3JTs-GnfnV5
"""

def encrypt(text, s):
    result = ""
    # traverse text
    for i in range(len(text)):
        char = text[i]

        # Encrypt uppercase characters
        if char.isupper():
            result += chr((ord(char) + s - 65) % 26 + 65)

        # Encrypt lowercase characters
        else:
            result += chr((ord(char) + s - 97) % 26 + 97)

    return result

def decrypt(text, s):
    return encrypt(text, -s)

text = input("Enter plain text: ")
s = int(input("Enter key value: "))
print("Text: " + text)
print("Shift: " + str(s))

encrypted_text = encrypt(text, s)
print("Encrypted text:", encrypted_text)
print("Decrypted text:", decrypt(encrypted_text, s))

def caesar_encrypt(plaintext, shift):
    ciphertext = ""
    for char in plaintext:
        if char.isalpha():
            if char.islower():
                ciphertext += chr((ord(char) - ord('a') + shift) % 26 + ord('a'))
            else:
                ciphertext += chr((ord(char) - ord('A') + shift) % 26 + ord('A'))
        else:
            ciphertext += char
    return ciphertext

def caesar_decrypt(ciphertext, shift):
    return caesar_encrypt(ciphertext, -shift)

def main():
    plaintext = input("Enter the plaintext: ")
    shift = int(input("Enter the shift value for encryption: "))

    encrypted_text = caesar_encrypt(plaintext, shift)
    decrypted_text = caesar_decrypt(encrypted_text, shift)

    print("\nOriginal Text:", plaintext)
    print("Encrypted Text:", encrypted_text)
    print("Decrypted Text:", decrypted_text)

if __name__ == "__main__":
    main()