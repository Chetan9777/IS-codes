# -*- coding: utf-8 -*-
"""railfence.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pmniSVY6O8Wy5mdgcHsyDUU1jONJYhad
"""

# function to encrypt a message
def encryptRailFence(text, key):
    rail = [['\n' for i in range(len(text))]
                for j in range(key)]
    dir_down = False
    row, col = 0, 0

    for i in range(len(text)):
        if (row == 0) or (row == key - 1):
            dir_down = not dir_down
        rail[row][col] = text[i]
        col += 1
        if dir_down:
            row += 1
        else:
            row -= 1
    result = []
    for i in range(key):
        for j in range(len(text)):
            if rail[i][j] != '\n':
                result.append(rail[i][j])
    return("" . join(result))

# This function receives cipher-text
# and key and returns the original
# text after decryption
def decryptRailFence(cipher, key):
    rail = [['\n' for i in range(len(cipher))]
                for j in range(key)]
    dir_down = None
    row, col = 0, 0

    for i in range(len(cipher)):
        if row == 0:
            dir_down = True
        if row == key - 1:
            dir_down = False
        rail[row][col] = '*'
        col += 1
        if dir_down:
            row += 1
        else:
            row -= 1

    index = 0
    for i in range(key):
        for j in range(len(cipher)):
            if ((rail[i][j] == '*') and
            (index < len(cipher))):
                rail[i][j] = cipher[index]
                index += 1

    result = []
    row, col = 0, 0
    for i in range(len(cipher)):
        if row == 0:
            dir_down = True
        if row == key - 1:
            dir_down = False
        if (rail[row][col] != '*'):
            result.append(rail[row][col])
            col += 1
        if dir_down:
            row += 1
        else:
            row -= 1
    return("".join(result))

# Main program
while True:
    print("\nRail Fence Cipher:")
    print("1. Encrypt")
    print("2. Decrypt")
    print("3. Exit")
    choice = input("Enter your choice: ")

    if choice == '1':
        plaintext = input("Enter the plaintext: ")
        key = int(input("Enter the rail fence key: "))
        ciphertext = encryptRailFence(plaintext, key)
        print("Encrypted Text:", ciphertext)
    elif choice == '2':
        ciphertext = input("Enter the ciphertext: ")
        key = int(input("Enter the rail fence key: "))
        plaintext = decryptRailFence(ciphertext, key)
        print("Decrypted Text:", plaintext)
    elif choice == '3':
        print("Exiting...")
        break
    else:
        print("Invalid choice. Please choose again.")